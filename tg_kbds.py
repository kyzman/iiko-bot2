from aiogram import types
from tg_const import ADMIN_IDs


def get_admin(user_id) -> bool:
    return user_id in ADMIN_IDs



std_kbd = types.ReplyKeyboardMarkup(resize_keyboard=True).add(types.KeyboardButton('/card')
                                                              ).add(types.KeyboardButton('/cancel'))

usr_kbd = types.ReplyKeyboardMarkup(resize_keyboard=True).add(types.KeyboardButton('/cancel'))

modify_ikb = types.InlineKeyboardMarkup(row_width=1).add(types.InlineKeyboardButton(
    text='üìô –ò–∑–º–µ–Ω–∏—Ç—å –§–∞–º–∏–ª–∏—é', callback_data="change_surname")).add(types.InlineKeyboardButton(
    text='üìò –ò–∑–º–µ–Ω–∏—Ç—å –ò–º—è', callback_data="change_name")).add(types.InlineKeyboardButton(
    text='üìó –ò–∑–º–µ–Ω–∏—Ç—å –û—Ç—á–µ—Å—Ç–≤–æ', callback_data="change_middleName")).add(types.InlineKeyboardButton(
    text='‚òéÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –¢–µ–ª–µ—Ñ–æ–Ω', callback_data="change_phone")).add(types.InlineKeyboardButton(
    text="üö´ –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_soft"))


async def get_confirm_kbd(submit_text: str, submit_data: str, cancel_data: str,
                          rows: int = 1) -> types.InlineKeyboardMarkup:
    ikb = types.InlineKeyboardMarkup(row_width=rows)
    ikb.insert(types.InlineKeyboardButton(text=submit_text, callback_data=submit_data))
    ikb.insert(types.InlineKeyboardButton(text="üö´ –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=cancel_data))
    return ikb


def get_card_kbd(cards=None) -> types.InlineKeyboardMarkup:
    ikb = types.InlineKeyboardMarkup(row_width=1)
    if cards:
        for card in cards:
            ikb.add(
                types.InlineKeyboardButton(text=f"‚ùå {card['number']}", callback_data=f"cardsel_{card['track']}"))
    else:
        ikb.add(types.InlineKeyboardButton(text='‚úÖ –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç—É', callback_data="addcard"))
    ikb.add(types.InlineKeyboardButton(text="üö´ –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_soft"))
    return ikb


def get_olaps_kbd(cards=None) -> types.InlineKeyboardMarkup:
    ikb = types.InlineKeyboardMarkup(row_width=1)
    if cards:
        for card in cards:
            ikb.add(
                types.InlineKeyboardButton(text=f"‚úÖ {card['number']}", callback_data=f"getolap_{card['number']}"))
    else:
        pass
    ikb.add(types.InlineKeyboardButton(text="üö´ –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_soft"))
    return ikb


def get_customer_kbd(user_id, request_id=None) -> types.InlineKeyboardMarkup:
    ikb = types.InlineKeyboardMarkup(row_width=1)
    ikb.add(types.InlineKeyboardButton(text="–û—Ç—á—ë—Ç –ø–æ —Ä–∞—Å—Ö–æ–¥–∞–º –∫–∞—Ä—Ç—ã", callback_data=f"olaps_{user_id}"))
    ikb.add(types.InlineKeyboardButton(text="–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data=f"category_{user_id}"))
    ikb.add(types.InlineKeyboardButton(text="–ö–∞—Ä—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data=f"selcard_{user_id}"))
    ikb.add(types.InlineKeyboardButton(text="–ö–æ—à–µ–ª—å–∫–∏ –∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data=f"wallets_{user_id}"))
    if get_admin(request_id):
        ikb.add(types.InlineKeyboardButton(text="–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", callback_data=f"modify_{user_id}"))
    ikb.add(types.InlineKeyboardButton(text="üö´ –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_del"))
    return ikb
